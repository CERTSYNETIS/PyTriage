---
services:
  pytriage:
    build:
      context: ..
      dockerfile: Docker/Dockerfile
    image: pytriage
    container_name: pytriage
    volumes:
      - /data/hayabusa:/hayabusa
      - /data:/data
      - /data/log:/log
    environment:
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
    ports:
      - 443:8080
  worker:
    image: pytriage
    command: celery --app triage.celery worker --loglevel=info
    environment:
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
    depends_on:
      pytriage:
        condition: service_started
      redis:
        condition: service_started
    cap_add:
      - SYS_ADMIN
    devices:
      - /dev/fuse
    security_opt:
      - apparmor:unconfined
    volumes:
      - /data/hayabusa:/hayabusa
      - /data:/data
      - /data/log:/log
      - /winlogbeat:/winlogbeat
      - /var/run/docker.sock:/var/run/docker.sock
  redis:
    image: redis:7.2.5

